import sympy as sp

A = sp.Matrix(4,4, [1,7,8,34,
                    3,9,6,6,
                    3,3,1,7,
                    5,7,8,1])
x0 = A[0,0]
x1 = A[1,1] - A[1,0] * (1/A[0,0]) * A[0,1]
x2 = A[2,2] - A[2,0] * (1/A[0,0]) * A[0,2] - (A[2,1] - A[2,0] * (1/A[0,0]) * A[0,1]) * (1/x1) * (A[1,2] - A[1,0] * (1/A[0,0]) * A[0,2])
x3 = A[3,3] - A[3,0] * (1/A[0,0]) * A[0,3] - (A[3,1] - A[3,0] * (1/A[0,0]) * A[0,1]) * (1/x1) * (A[1,3] - A[1,0] * (1/A[0,0]) * A[0,3]) - ((A[3,2] - A[3,0] * (1/A[0,0]) * A[0,2]) - (A[3,1] - A[3,0] * (1/A[0,0]) * A[0,1]) * (1/x1) * (A[1,2] - A[1,0] * (1/A[0,0]) * A[0,2])) * (1/x2) * ((A[2,3] - A[2,0] * (1/A[0,0]) * A[0,3]) - (A[2,1] - A[2,0] * (1/A[0,0]) * A[0,1]) * (1/x1) * (A[1,3] - A[1,0] * (1/A[0,0]) * A[0,3]))


P1 = (A[3,2] - A[3,0] * (1/A[0,0]) * A[0,2]) #-
P2 = (A[3,1] - A[3,0] * (1/A[0,0]) * A[0,1]) #* (1/x1) * (A[1,2] - A[1,0] * (1/A[0,0]) * A[0,2]) * (1/x2) * 
P3 = ((A[2,3] - A[2,0] * (1/A[0,0]) * A[0,3]) - (A[2,1] - A[2,0] * (1/A[0,0]) * A[0,1])) #* (1/x1) * 
P4 = (A[1,3] - A[1,0] * (1/A[0,0]) * A[0,3])


print(x0 * x1 * x2 * x3)

x = A[1,1] - A[1,0] * (1/A[0,0]) * A[0,1]
z = A[2,2] - A[2,0] * (1/A[0,0]) * A[0,2] - (A[1,2] - A[1,0] * (1/A[0,0]) * A[0,2]) * x * (A[2,1] - A[2,0] * (1/A[0,0]) * A[0,1])

print(sp.det(A))
print(z * x * A[0,0])
